@model IEnumerable<MOBYNew.Models.Item>

@{
    ViewBag.Title = "Items";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Items</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table id="items" class="table table-bordred table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ItemName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemCategory.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemGenre.GenreName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QtyInStock)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.ReleaseDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ItemDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImagePath)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ISBN13EAN)
                </th>
            *@
            <th><text>API Edit</text></th>
        </tr>
    </thead>
    @*@foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemCategory.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemGenre.GenreName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImagePath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ISBN13EAN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QtyInStock)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }*@
    <tbody></tbody>
</table>
@section scripts
{
    <script>
        $(document).ready(function () {
            var table = $("#items").DataTable
                ({
                    ajax: {
                        url: "/api/items",
                        dataSrc: ""
                    },
                    columns: [
                        //Pretty sure that 'data' draws directly from Item.cs Model attributes.
                        //Remember! Camel case!!
                        {
                            data: "itemName",
                            render: function (data, type, item) {
                                return "<a href='/items/edit/" + item.id + "'>" + data + "</a>";
                            }
                        },
                        {
                            data: "itemCategory.categoryName"
                        },
                        {
                            data: "itemGenre.genreName"
                        },
                        {
                            data: "price"
                        },
                        {
                            data: "qtyInStock"
                        },
                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-contact-id=" + data + ">Delete</button>";
                        }
                    }]
                })

            $("#items").on("click", ".js-delete", function () {

                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this item?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/items/" + button.attr("data-item-id"),
                            method: "DELETE",
                            success: function () {
                                button.parents("tr").remove();
                            }
                        });
                    }
                })
            });
        })
    </script>}

